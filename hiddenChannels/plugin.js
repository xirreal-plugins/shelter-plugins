(function(I,h,c,E,b){"use strict";function u(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(a){if(a!=="default"){var l=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,l.get?l:{enumerable:!0,get:function(){return e[a]}})}}),t.default=e,Object.freeze(t)}var n=u(I),i=u(h),r=u(b),N=()=>h.injectCSS('[aria-label$=hidden]>div path[d^=M2][d*="19"],[aria-label$=hidden]>div path[d^=M17][d*="19"]{fill:#ed4245!important}');const o=n.findByProps("h5"),d=n.findByProps("flex","directionColumn","alignCenter"),P=n.findByProps("chat","chatContent"),S=n.findByDisplayName("ChannelTextLimited"),M=n.findByDisplayName("ChannelTextNSFW"),p=n.findByDisplayName("HeaderBar"),T=n.findByDisplayName("ChannelTopic"),_=p.Icon,D=p.Title;var v=({channel:e,guild:t})=>r.createElement("div",{style:{width:"100%",background:"var(--background-primary)"}},r.createElement(p,{className:"fake-headerbar"},r.createElement(_,{icon:e.nsfw?M:S}),r.createElement(D,null,e.name),r.createElement(T,{channel:e,guild:t},"lmao")),r.createElement("div",{className:`hidden-notice ${P.content}`,style:{height:"100%"}},r.createElement("div",{className:`${d.flexCenter}`,style:{width:"100%"}},r.createElement("div",{className:`${d.flex} ${d.directionColumn} ${d.alignCenter}`},r.createElement("h2",{className:`${o.h2} ${o.defaultColor}`},"This is a hidden channel."),r.createElement("h5",{className:`${o.h5} ${o.defaultColor}`},"You cannot see the contents of this channel. However, you may see its name and topic.")))));const s={},y=n.findByProps("hasChannel").getChannel,O=n.findByProps("getVoiceStateStats").getChannelId,L=n.findByProps("getGuild").getGuild;n.findByProps("getMember").getMember,n.findByProps("getCurrentUser").getCurrentUser;const R=n.findByDisplayName("RouteWithImpression",!1),C=n.findByProps("getChannelPermissions"),$=n.findByProps("ReadState").ReadState.prototype,G=n.findByProps("fetchMessages","sendMessage"),U=n.findByDisplayName("ChannelItem",!1),g=n.findByPrototypes("isManaged"),j=C.can.bind({}),w=e=>e?.permissionOverwrites?.length>0,f=e=>{if(typeof e!="object"&&!e?.id)try{e=y(e)}catch{e=null}return!e||[c.ChannelTypes.DM,c.ChannelTypes.GROUP_DM,c.ChannelTypes.GUILD_CATEGORY,c.ChannelTypes.GUILD_STORE,c.ChannelTypes.GUILD_STORE,c.ChannelTypes.GUILD_DIRECTORY].includes(e.type)?!0:e.canBeSeen()};var x=e=>({onLoad(){s.css=N(),s.Channel=()=>{delete g.prototype.canBeSeen},g.prototype.canBeSeen=function(){return j(c.Permissions.VIEW_CHANNEL,this)},s.can=i.instead("can",C,(t,a)=>t[0]==c.Permissions.VIEW_CHANNEL&&!w(t[1])?!0:a(...t)),s.Route=i.after("default",R,(t,a)=>{const l=a.props?.computedMatch?.params?.channelId,B=a.props?.computedMatch?.params?.guildId;let m;try{m=y(l)}catch{return a}return!f(m)&&B&&m?.id!=O()&&(a.props.render=()=>v({channel:m,guild:L(B)})),a}),s.channelItem=i.before("default",U,t=>(f(t[0].channel)||(t[0]["aria-label"]+=" hidden"),t)),s.unreadStateManager=i.after("canTrackUnreads",$,(t,a)=>a&&canBeSeen(t[0])),s.fetchMessages=i.instead("fetchMessages",G,(t,a)=>{if(!f(t[0].channelId)){E.dispatch({type:"LOAD_MESSAGES_FAILURE",channelId:t[0].channelId});return}return a(...t)})},onUnload(){for(let t of Object.values(s))t()}});return x})(cumcord.modules.webpack,cumcord.patcher,cumcord.modules.common.constants,cumcord.modules.common.FluxDispatcher,cumcord.modules.common.React);
